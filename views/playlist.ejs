<!-- views/playlist.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Playlist</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
</head>
<body>
    <div class="container mt-4">
        <h2 class="text-center mb-4">Playlist: <%= playlist.name %></h2>
        
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="text-center">
                    <!-- Add the playlist image if available -->
                    <% if (playlist.images && playlist.images.length > 0) { %>
                        <img src="<%= playlist.images[0].url %>" alt="Playlist Image" class="rounded-circle" style="width: 100px; height: 100px; object-fit: cover;">
                    <% } %>
                    <p class="mt-2">Playlist by <%= playlist.owner.display_name %></p>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-body text-center">
                <h5 class="card-title">Playlist Tracks</h5>
                <div class="row justify-content-center">
                    <% tracks.forEach((track) => { %>
                        <div class="col-md-4 mb-4">
                            <div class="card">
                                <!-- Album Art Card -->
                                <div class="card-img-top">
                                    <% if (track.track.album.images && track.track.album.images.length > 0) { %>
                                        <!-- Add the track album art if available -->
                                        <img src="<%= track.track.album.images[1].url %>" alt="Album Art" class="img-fluid" style="object-fit: cover;">
                                    <% } %>
                                </div>

                                <!-- Track Info Card -->
                                <div class="card-body">
                                    <h5 class="card-title"><%= track.track.name %></h5>
                                    <p class="card-text">by <%= track.track.artists.map(artist => artist.name).join(', ') %></p>

                                    <!-- Audio Preview -->
                                    <% if (track.track.preview_url) { %>
                                        <audio controls class="mt-2">
                                            <source src="<%= track.track.preview_url %>" type="audio/mp3">
                                            Your browser does not support the audio element.
                                        </audio>
                                    <% } else { %>
                                        <p class="mt-2">No preview available</p>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>

       <!-- Live Search Section -->
    <div class="mt-4">
        <h2>Search for Songs</h2>
        <input type="text" id="searchInput" class="form-control mb-2" placeholder="Search for songs...">
        <div id="searchResults" class="list-group"></div>
    </div>

        <div class="text-center">
            <a href="/profile" class="btn btn-primary mt-4">Back to Profile</a>
        </div>
    

    <!-- Add Bootstrap JS and Popper.js CDN links (if needed) -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

    <script>
        // Function to perform live search
        const performSearch = async () => {
            const searchInput = document.getElementById('searchInput');
            const searchResults = document.getElementById('searchResults');

            // Clear previous search results
            searchResults.innerHTML = '';

            // Fetch search results from your server (adjust the URL accordingly)
            const response = await fetch(`/search?query=${searchInput.value}`);
            const data = await response.json();

            // Display up to 5 search results with an "add" button for each
            data.slice(0, 5).forEach((result) => {
                // Create a div to hold each result and its add button
                const resultDiv = document.createElement('div');
                resultDiv.className = 'd-flex justify-content-between align-items-center list-group-item';

                // Display the album art if available
                if (result.album && result.album.images && result.album.images.length > 0) {
                    const albumArt = document.createElement('img');
                    albumArt.src = result.album.images[2].url; // Use the first image
                    albumArt.alt = 'Album Art';
                    albumArt.className = 'mr-2'; // Add margin for better spacing
                    resultDiv.appendChild(albumArt);  // <-- Append to resultDiv, not resultItem
                }
                
                // Display the track information
                const resultInfo = document.createElement('div');
                resultInfo.textContent = `${result.name} by ${result.artists.map(artist => artist.name).join(', ')}`;
                resultDiv.appendChild(resultInfo);

              // Add button to add the track to the playlist
            const addButton = document.createElement('button');
            addButton.textContent = 'Add';
            addButton.className = 'btn btn-success';

            // Pass the track ID and playlist ID to the addSong function
            addButton.addEventListener('click', () => addSong(result.id, '<%= playlist.id %>', '<%= accessToken %>'));
            
            resultDiv.appendChild(addButton);

            // Append the result div to the search results container
            searchResults.appendChild(resultDiv);
        });
    };

    // Attach the performSearch function to the input's "input" event
    const searchInput = document.getElementById('searchInput');
    searchInput.addEventListener('input', performSearch);

    // Function to add a song to the playlist
    const addSong = async (trackId, playlistId, accessToken) => {
        try {
            console.log('Adding song:', trackId);

            // Send a request to Spotify API to add the song to the playlist
            const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=spotify:track:${trackId}`, {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${accessToken}`,
                    'Content-Type': 'application/json',
                },
            });

            // Handle the response as needed
        if (response.ok) {
            // Track added successfully
            console.log('Track added successfully');
            alert('Track added successfully to playlist');

            // Reload the page
            window.location.reload();
        } else {
            // Handle the error response
            console.error('Error adding song. Status:', response.status);
            alert('Error adding song. Please try again.');
        }
    } catch (error) {
        console.error('Error adding song:', error);
        alert('Error adding song. Please try again.');
    }
}
</script>
</div>
      

</body>
</html>


